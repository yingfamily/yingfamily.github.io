'use strict';

var _expect = require('expect');

var _expect2 = _interopRequireDefault(_expect);

var _memoize = require('../memoize');

var _memoize2 = _interopRequireDefault(_memoize);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('memoize', function () {
  describe('basic', function () {
    it('single', function () {
      var callCount = 0;
      var multiply = function multiply(x, y, z) {
        callCount += 1;
        return x * y * z;
      };
      multiply = (0, _memoize2.default)()(multiply);

      (0, _expect2.default)(multiply(1, 2, 3)).toBe(6);

      (0, _expect2.default)(multiply(1, 2, 3)).toBe(6);

      (0, _expect2.default)(callCount).toBe(1);

      (0, _expect2.default)(multiply(4, 5, 6)).toBe(120);

      (0, _expect2.default)(callCount).toBe(2);

      (0, _expect2.default)(multiply(1, 2, 3)).toBe(6);

      (0, _expect2.default)(callCount).toBe(3);
    });

    it('multiple', function () {
      var callCount = 0;
      var multiply = function multiply(x, y, z) {
        callCount += 1;
        return x * y * z;
      };
      multiply = (0, _memoize2.default)(2)(multiply);

      (0, _expect2.default)(multiply(1, 2, 3)).toBe(6);

      (0, _expect2.default)(multiply(1, 2, 3)).toBe(6);

      (0, _expect2.default)(callCount).toBe(1);

      (0, _expect2.default)(multiply(4, 5, 6)).toBe(120);

      (0, _expect2.default)(callCount).toBe(2);

      (0, _expect2.default)(multiply(1, 2, 3)).toBe(6);

      (0, _expect2.default)(callCount).toBe(2);

      (0, _expect2.default)(multiply(4, 5, 6)).toBe(120);

      (0, _expect2.default)(callCount).toBe(2);
    });
  });

  describe('shallow', function () {
    it('array', function () {
      var callCount = 0;
      var multiply = function multiply(x, y, z) {
        callCount += 1;
        return x.concat(y, z).reduce(function (t, n) {
          return t * n;
        });
      };
      multiply = (0, _memoize2.default)()(multiply);

      var x = [1, 2, 3];
      var y = [4, 5, 6];
      var z = [7, 8, 9];

      var x2 = [1, 2, 3];

      (0, _expect2.default)(multiply(x, y, z)).toBe(362880);

      (0, _expect2.default)(multiply(x2, y, z)).toBe(362880);

      (0, _expect2.default)(callCount).toBe(2);
    });

    it('object', function () {
      var callCount = 0;
      var multiply = function multiply(x, y, z) {
        callCount += 1;
        return x.val * y.val * z.val;
      };
      multiply = (0, _memoize2.default)(2)(multiply);

      var x = { val: 1 };
      var y = { val: 2 };
      var z = { val: 3 };

      var x2 = { val: 1 };

      (0, _expect2.default)(multiply(x, y, z)).toBe(6);

      (0, _expect2.default)(multiply(x2, y, z)).toBe(6);

      (0, _expect2.default)(callCount).toBe(2);
    });
  });

  describe('deep', function () {
    it('array', function () {
      var callCount = 0;
      var multiply = function multiply(x, y, z) {
        callCount += 1;
        return x.concat(y, z).reduce(function (t, n) {
          return t * n;
        });
      };
      multiply = (0, _memoize2.default)(true)(multiply);

      var x = [1, 2, 3];
      var y = [4, 5, 6];
      var z = [7, 8, 9];

      var x2 = [1, 2, 3];
      var x3 = [3, 2, 1];

      (0, _expect2.default)(multiply(x, y, z)).toBe(362880);

      (0, _expect2.default)(multiply(x2, y, z)).toBe(362880);

      (0, _expect2.default)(callCount).toBe(1);

      (0, _expect2.default)(multiply(x3, y, z)).toBe(362880);

      (0, _expect2.default)(callCount).toBe(2);
    });

    it('object', function () {
      var callCount = 0;
      var multiply = function multiply(x, y, z) {
        callCount += 1;
        return x.val * y.val * z.val;
      };
      multiply = (0, _memoize2.default)(true)(multiply);

      var x = { val: 1 };
      var y = { val: 2 };
      var z = { val: 3 };

      var x2 = { val: 1 };
      var x3 = { val: 4 };

      (0, _expect2.default)(multiply(x, y, z)).toBe(6);

      (0, _expect2.default)(multiply(x2, y, z)).toBe(6);

      (0, _expect2.default)(callCount).toBe(1);

      (0, _expect2.default)(multiply(x3, y, z)).toBe(24);

      (0, _expect2.default)(callCount).toBe(2);
    });

    it('object nested', function () {
      var callCount = 0;
      var multiply = function multiply(x, y, z) {
        callCount += 1;
        return x.inner.val * y.inner.val * z.inner.val;
      };
      multiply = (0, _memoize2.default)(true)(multiply);

      var x = { inner: { val: 1 } };
      var y = { inner: { val: 2 } };
      var z = { inner: { val: 3 } };

      var x2 = { inner: { val: 1 } };
      var x3 = { inner: { val: 4 } };

      (0, _expect2.default)(multiply(x, y, z)).toBe(6);

      (0, _expect2.default)(multiply(x2, y, z)).toBe(6);

      (0, _expect2.default)(callCount).toBe(1);

      (0, _expect2.default)(multiply(x3, y, z)).toBe(24);

      (0, _expect2.default)(callCount).toBe(2);
    });
  });
});